#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label "development"
    }
    stages {
        stage("docker login") {
            agent {
                label "development"
            }
            steps {
                echo " ============== start docker login =================="
                withCredentials([usernamePassword(credentialsId: 'yesinaleksey_dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                	sh 'docker login -u $USERNAME -p $PASSWORD'
                }
            }
        }

        stage("create docker image") {
            agent {
                label "development"
            }
            steps {
                echo " ============== start building image =================="
                dir ('.') {
                	sh 'docker build -t yesinaleksey/weatherapp:v2 .'
                }
            }
        }

        stage("docker push") {
            agent {
                label "development"
            }
            steps {
                echo "============== start pushing container =================="
                dir ('.') {
                	sh 'docker push yesinaleksey/weatherapp:v2'
                }
                echo "============== start removing container from dev.server =================="
                dir ('.') {
                  sh 'docker rmi yesinaleksey/weatherapp:v2'
                }
            }
        }

        stage('terraform init') {
            agent {
                label "master"
            }
            steps {
              echo "============== terraform init =================="
              withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'terraform-aws-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh '''
                    terraform init
                '''
              }
            }
        }

        stage('terraform apply') {
            agent {
                label "master"
            }
            steps {
              echo "============== terraform apply =================="
              withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'terraform-aws-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh '''
                    terraform apply -auto-approve
                '''
              }
            }
        }
    }
}
